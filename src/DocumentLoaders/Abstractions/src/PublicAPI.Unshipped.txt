LangChain.DocumentLoaders.DataSource
LangChain.DocumentLoaders.DataSource.DataSource() -> void
LangChain.DocumentLoaders.DataSource.Encoding.get -> System.Text.Encoding!
LangChain.DocumentLoaders.DataSource.Encoding.init -> void
LangChain.DocumentLoaders.DataSource.GetStreamAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.IO.Stream!>!
LangChain.DocumentLoaders.DataSource.Stream.get -> System.IO.Stream?
LangChain.DocumentLoaders.DataSource.Stream.init -> void
LangChain.DocumentLoaders.DataSource.Type.get -> LangChain.DocumentLoaders.DataSourceType
LangChain.DocumentLoaders.DataSource.Type.init -> void
LangChain.DocumentLoaders.DataSource.Value.get -> string?
LangChain.DocumentLoaders.DataSource.Value.init -> void
LangChain.DocumentLoaders.DataSourceExtensions
LangChain.DocumentLoaders.DataSourceType
LangChain.DocumentLoaders.DataSourceType.Path = 1 -> LangChain.DocumentLoaders.DataSourceType
LangChain.DocumentLoaders.DataSourceType.Stream = 2 -> LangChain.DocumentLoaders.DataSourceType
LangChain.DocumentLoaders.DataSourceType.Uri = 0 -> LangChain.DocumentLoaders.DataSourceType
LangChain.DocumentLoaders.Document
LangChain.DocumentLoaders.Document.Document() -> void
LangChain.DocumentLoaders.Document.Document(string! content, System.Collections.Generic.IReadOnlyDictionary<string!, object!>? metadata = null) -> void
LangChain.DocumentLoaders.Document.Metadata.get -> System.Collections.Generic.IReadOnlyDictionary<string!, object!>!
LangChain.DocumentLoaders.Document.Metadata.init -> void
LangChain.DocumentLoaders.Document.PageContent.get -> string!
LangChain.DocumentLoaders.Document.PageContent.init -> void
LangChain.DocumentLoaders.Document.Paragraphs() -> System.Collections.Generic.IReadOnlyList<string!>!
LangChain.DocumentLoaders.Document.Summary() -> string!
LangChain.DocumentLoaders.DocumentLoaderSettings
LangChain.DocumentLoaders.DocumentLoaderSettings.DocumentLoaderSettings() -> void
LangChain.DocumentLoaders.DocumentLoaderSettings.ShouldCollectMetadata.get -> bool
LangChain.DocumentLoaders.DocumentLoaderSettings.ShouldCollectMetadata.set -> void
LangChain.DocumentLoaders.DocumentLookupExtensions
LangChain.DocumentLoaders.EnumerableExtensions
LangChain.DocumentLoaders.FileLoader
LangChain.DocumentLoaders.FileLoader.FileLoader() -> void
LangChain.DocumentLoaders.FileLoader.LoadAsync(LangChain.DocumentLoaders.DataSource! dataSource, LangChain.DocumentLoaders.DocumentLoaderSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<LangChain.DocumentLoaders.Document!>!>!
LangChain.DocumentLoaders.IDocumentLoader
LangChain.DocumentLoaders.IDocumentLoader.LoadAsync(LangChain.DocumentLoaders.DataSource! dataSource, LangChain.DocumentLoaders.DocumentLoaderSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<LangChain.DocumentLoaders.Document!>!>!
override LangChain.DocumentLoaders.Document.ToString() -> string!
static LangChain.DocumentLoaders.DataSource.FromBytes(byte[]! bytes) -> LangChain.DocumentLoaders.DataSource!
static LangChain.DocumentLoaders.DataSource.FromPath(string! path) -> LangChain.DocumentLoaders.DataSource!
static LangChain.DocumentLoaders.DataSource.FromStream(System.IO.Stream! stream) -> LangChain.DocumentLoaders.DataSource!
static LangChain.DocumentLoaders.DataSource.FromUri(System.Uri! uri) -> LangChain.DocumentLoaders.DataSource!
static LangChain.DocumentLoaders.DataSource.FromUrl(string! url) -> LangChain.DocumentLoaders.DataSource!
static LangChain.DocumentLoaders.DataSourceExtensions.CollectMetadataIfRequired(this LangChain.DocumentLoaders.DocumentLoaderSettings? settings, LangChain.DocumentLoaders.DataSource! dataSource) -> System.Collections.Generic.IReadOnlyDictionary<string!, object!>?
static LangChain.DocumentLoaders.DataSourceExtensions.ToMetadata(this LangChain.DocumentLoaders.DataSource! dataSource) -> System.Collections.Generic.IReadOnlyDictionary<string!, object!>!
static LangChain.DocumentLoaders.DataSourceExtensions.With(this System.Collections.Generic.IReadOnlyDictionary<string!, object!>! metadata, System.Collections.Generic.IReadOnlyDictionary<string!, object!>! additionalMetadata) -> System.Collections.Generic.IReadOnlyDictionary<string!, object!>!
static LangChain.DocumentLoaders.Document.Empty.get -> LangChain.DocumentLoaders.Document!
static LangChain.DocumentLoaders.DocumentLookupExtensions.Lookup(this LangChain.DocumentLoaders.Document! document, string! searchString) -> System.Collections.Generic.IEnumerable<string!>!
static LangChain.DocumentLoaders.EnumerableExtensions.GetMimeType(string! extension) -> string!
static LangChain.DocumentLoaders.EnumerableExtensions.ToBinaryData(this System.Collections.Generic.IEnumerable<string!>! paths) -> System.Collections.Generic.IReadOnlyList<System.BinaryData!>!
static LangChain.DocumentLoaders.EnumerableExtensions.ToDocuments(this System.Collections.Generic.IEnumerable<string!>! texts) -> System.Collections.Generic.IReadOnlyList<LangChain.DocumentLoaders.Document!>!